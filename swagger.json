{
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "AppController_getHello",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["App"]
      }
    },
    "/projects/{projectid}/statistic/report-status-count": {
      "get": {
        "operationId": "StatisticController_getReportStatusCount",
        "parameters": [
          {
            "name": "projectid",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "role",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "from",
            "required": false,
            "in": "query",
            "description": "Start date/time of the phase",
            "schema": {
              "example": "2024-01-01T00:00:00.000Z",
              "type": "string"
            }
          },
          {
            "name": "to",
            "required": false,
            "in": "query",
            "description": "End date/time of the phase",
            "schema": {
              "example": "2024-02-01T00:00:00.000Z",
              "type": "string"
            }
          },
          {
            "name": "dateType",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns array of objects with {status, count}",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "enum": [
                          "INIT",
                          "CONFIRMING",
                          "IN_PROCESSING",
                          "REJECTED",
                          "DONE"
                        ]
                      },
                      "count": { "type": "number" }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get count of reports by status",
        "tags": ["Statistic"]
      }
    },
    "/projects/{projectid}/statistic/report-severity-count": {
      "get": {
        "operationId": "StatisticController_getReportSeverityCount",
        "parameters": [
          {
            "name": "projectid",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "role",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "from",
            "required": false,
            "in": "query",
            "description": "Start date/time of the phase",
            "schema": {
              "example": "2024-01-01T00:00:00.000Z",
              "type": "string"
            }
          },
          {
            "name": "to",
            "required": false,
            "in": "query",
            "description": "End date/time of the phase",
            "schema": {
              "example": "2024-02-01T00:00:00.000Z",
              "type": "string"
            }
          },
          {
            "name": "dateType",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns array of objects with {severity, count}",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "severity": {
                        "type": "string",
                        "enum": ["INFO", "LOW", "MEDIUM", "HIGH", "null"]
                      },
                      "count": { "type": "number" }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get count of reports by severity",
        "tags": ["Statistic"]
      }
    },
    "/projects/{projectid}/statistic/report-type-count": {
      "get": {
        "operationId": "StatisticController_getReportTypeCount",
        "parameters": [
          {
            "name": "projectid",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "role",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "from",
            "required": false,
            "in": "query",
            "description": "Start date/time of the phase",
            "schema": {
              "example": "2024-01-01T00:00:00.000Z",
              "type": "string"
            }
          },
          {
            "name": "to",
            "required": false,
            "in": "query",
            "description": "End date/time of the phase",
            "schema": {
              "example": "2024-02-01T00:00:00.000Z",
              "type": "string"
            }
          },
          {
            "name": "dateType",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns array of objects with {type, count}",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["BUG", "FEEDBACK", "WISH"]
                      },
                      "count": { "type": "number" }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get count of reports by type",
        "tags": ["Statistic"]
      }
    },
    "/projects/{projectid}/statistic/report-issue-type-count": {
      "get": {
        "operationId": "StatisticController_getReportIssueTypeCount",
        "parameters": [
          {
            "name": "projectid",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "role",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "from",
            "required": false,
            "in": "query",
            "description": "Start date/time of the phase",
            "schema": {
              "example": "2024-01-01T00:00:00.000Z",
              "type": "string"
            }
          },
          {
            "name": "to",
            "required": false,
            "in": "query",
            "description": "End date/time of the phase",
            "schema": {
              "example": "2024-02-01T00:00:00.000Z",
              "type": "string"
            }
          },
          {
            "name": "dateType",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns array of objects with {type, count}",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "issueType": {
                        "type": "string",
                        "enum": [
                          "UI",
                          "FUNCTIONAL",
                          "PERFORMANCE",
                          "SECURITY",
                          "NETWORK",
                          "DATA",
                          "OTHER"
                        ]
                      },
                      "count": { "type": "number" }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get count of reports by type",
        "tags": ["Statistic"]
      }
    },
    "/projects/{projectid}/statistic/reports-by-time": {
      "get": {
        "operationId": "StatisticController_getReportStatisticByTime",
        "parameters": [
          {
            "name": "projectid",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "role",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "from",
            "required": false,
            "in": "query",
            "description": "Start date/time of the phase",
            "schema": {
              "example": "2024-01-01T00:00:00.000Z",
              "type": "string"
            }
          },
          {
            "name": "to",
            "required": false,
            "in": "query",
            "description": "End date/time of the phase",
            "schema": {
              "example": "2024-02-01T00:00:00.000Z",
              "type": "string"
            }
          },
          {
            "name": "dateType",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns array of objects with {date, count}",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "date": { "type": "string", "example": "2024-01" },
                      "count": { "type": "number" }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get the number of reports created each day/month/type over a given period",
        "tags": ["Statistic"]
      }
    },
    "/projects/{projectid}/statistic/reports-by-member": {
      "get": {
        "operationId": "StatisticController_getReportStatisticByMember",
        "parameters": [
          {
            "name": "projectid",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "role",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "from",
            "required": false,
            "in": "query",
            "description": "Start date/time of the phase",
            "schema": {
              "example": "2024-01-01T00:00:00.000Z",
              "type": "string"
            }
          },
          {
            "name": "to",
            "required": false,
            "in": "query",
            "description": "End date/time of the phase",
            "schema": {
              "example": "2024-02-01T00:00:00.000Z",
              "type": "string"
            }
          },
          {
            "name": "dateType",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns array of objects with {date, count}",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "userId": { "type": "number" },
                      "count": { "type": "number" }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get the number of reports owned/assigned by member over a given period",
        "tags": ["Statistic"]
      }
    },
    "/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LoginDto" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/LoginReturnEntity" }
              }
            }
          }
        },
        "tags": ["Auth"]
      }
    },
    "/auth/register": {
      "post": {
        "operationId": "AuthController_register",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateUserDto" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserEntity" }
              }
            }
          }
        },
        "tags": ["Auth"]
      }
    },
    "/auth/refresh-token": {
      "post": {
        "operationId": "AuthController_refreshToken",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RefreshTokenDto" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/LoginEntity" }
              }
            }
          },
          "401": {
            "description": "token is not valid",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HttpExceptionEntity" }
              }
            }
          },
          "500": {
            "description": "generate token exception",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HttpExceptionEntity" }
              }
            }
          }
        },
        "tags": ["Auth"]
      }
    },
    "/users/me": {
      "get": {
        "operationId": "UsersController_getMe",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Users"]
      }
    },
    "/projects/me": {
      "get": {
        "operationId": "ProjectsController_listProjects",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "keyword",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectPaginateEntity"
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "tags": ["Projects"]
      }
    },
    "/projects/create": {
      "post": {
        "operationId": "ProjectsController_createProject",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateProjectDto" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProjectEntity" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "tags": ["Projects"]
      }
    },
    "/projects/me/{id}": {
      "get": {
        "operationId": "ProjectsController_getProject",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProjectEntity" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "tags": ["Projects"]
      },
      "patch": {
        "operationId": "ProjectsController_updateProject",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateProjectDto" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Project updated successfully.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProjectEntity" }
              }
            }
          },
          "401": { "description": "" },
          "404": { "description": "Project not found." }
        },
        "security": [{ "bearer": [] }, { "bearer": [] }],
        "summary": "Update an existing project",
        "tags": ["Projects"]
      },
      "delete": {
        "operationId": "ProjectsController_deleteProject",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Project deleted successfully." },
          "401": { "description": "" },
          "404": { "description": "Project not found." }
        },
        "security": [{ "bearer": [] }, { "bearer": [] }],
        "summary": "Delete a project",
        "tags": ["Projects"]
      }
    },
    "/projects/{id}/roles": {
      "get": {
        "operationId": "ProjectsController_getRoles",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/RoleEntity" }
                }
              }
            }
          },
          "401": { "description": "" }
        },
        "security": [{ "bearer": [] }, { "bearer": [] }],
        "tags": ["Projects"]
      }
    },
    "/projects/{projectid}/roles": {
      "post": {
        "operationId": "ProjectsController_createRole",
        "parameters": [
          {
            "name": "projectid",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateRoleDto" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProjectEntity" }
              }
            }
          },
          "401": { "description": "" }
        },
        "security": [{ "bearer": [] }, { "bearer": [] }],
        "tags": ["Projects"]
      }
    },
    "/projects/{projectid}/roles/{roleid}": {
      "delete": {
        "operationId": "ProjectsController_deleteRole",
        "parameters": [
          {
            "name": "projectid",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "roleid",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GeneralResult" }
              }
            }
          },
          "401": { "description": "" }
        },
        "security": [{ "bearer": [] }, { "bearer": [] }],
        "tags": ["Projects"]
      }
    },
    "/projects/{projectid}/members": {
      "get": {
        "operationId": "ProjectsController_getMembers",
        "parameters": [
          {
            "name": "projectid",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberPaginateEntity"
                }
              }
            }
          },
          "401": { "description": "" }
        },
        "security": [{ "bearer": [] }, { "bearer": [] }],
        "tags": ["Projects"]
      }
    },
    "/projects/{projectid}/members/{userid}": {
      "delete": {
        "operationId": "ProjectsController_deleteMember",
        "parameters": [
          {
            "name": "projectid",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "userid",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GeneralResult" }
              }
            }
          },
          "401": { "description": "" }
        },
        "security": [{ "bearer": [] }, { "bearer": [] }],
        "tags": ["Projects"]
      }
    },
    "/projects/{projectid}/invite": {
      "get": {
        "operationId": "ProjectsController_getInvitationLink",
        "parameters": [
          {
            "name": "projectid",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "email",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "roleid",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "401": { "description": "" } },
        "security": [{ "bearer": [] }, { "bearer": [] }],
        "tags": ["Projects"]
      }
    },
    "/projects/{projectid}/invite/verify": {
      "get": {
        "operationId": "ProjectsController_verifyMember",
        "parameters": [
          {
            "name": "projectid",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "token",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GeneralResult" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "tags": ["Projects"]
      }
    },
    "/projects/{projectid}/status": {
      "post": {
        "operationId": "ProjectsController_createStatus",
        "parameters": [
          {
            "name": "projectid",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjectStatusDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The status has been successfully created.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/StatusEntity" }
              }
            }
          },
          "400": { "description": "Invalid input data." }
        },
        "security": [{ "bearer": [] }],
        "summary": "Create a new status",
        "tags": ["Projects"]
      },
      "get": {
        "operationId": "ProjectsController_findAllStatus",
        "parameters": [
          {
            "name": "projectid",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of statuses retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/StatusEntity" }
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "Get all statuses",
        "tags": ["Projects"]
      }
    },
    "/projects/{projectid}/status/{id}": {
      "get": {
        "operationId": "ProjectsController_findOneStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "projectid",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Status retrieved successfully.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/StatusEntity" }
              }
            }
          },
          "404": { "description": "Status not found." }
        },
        "security": [{ "bearer": [] }],
        "summary": "Get a single status by ID",
        "tags": ["Projects"]
      },
      "patch": {
        "operationId": "ProjectsController_updateStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "projectid",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateStatusDto" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The status has been successfully updated.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/StatusEntity" }
              }
            }
          },
          "404": { "description": "Status not found." }
        },
        "security": [{ "bearer": [] }],
        "summary": "Update an existing status by ID",
        "tags": ["Projects"]
      },
      "delete": {
        "operationId": "ProjectsController_removeStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "projectid",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "The status has been successfully deleted.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/StatusEntity" }
              }
            }
          },
          "404": { "description": "Status not found." }
        },
        "security": [{ "bearer": [] }],
        "summary": "Delete a status by ID",
        "tags": ["Projects"]
      }
    },
    "/projects/{projectid}/category": {
      "post": {
        "operationId": "ProjectsController_createCategory",
        "parameters": [
          {
            "name": "projectid",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateCategoryDto" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The category has been successfully created.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CategoryEntity" }
              }
            }
          },
          "400": { "description": "Invalid input data." }
        },
        "security": [{ "bearer": [] }],
        "summary": "Create a new category",
        "tags": ["Projects"]
      },
      "get": {
        "operationId": "ProjectsController_findAllCategory",
        "parameters": [
          {
            "name": "projectid",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of categories retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/CategoryEntity" }
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "Get all categories",
        "tags": ["Projects"]
      }
    },
    "/projects/{projectid}/category/{id}": {
      "get": {
        "operationId": "ProjectsController_findOneCategory",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "projectid",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Category retrieved successfully.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CategoryEntity" }
              }
            }
          },
          "404": { "description": "Category not found." }
        },
        "security": [{ "bearer": [] }],
        "summary": "Get a single category by ID",
        "tags": ["Projects"]
      },
      "patch": {
        "operationId": "ProjectsController_updateCategory",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "projectid",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateCategoryDto" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The category has been successfully updated.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CategoryEntity" }
              }
            }
          },
          "404": { "description": "Category not found." }
        },
        "security": [{ "bearer": [] }],
        "summary": "Update an existing category by ID",
        "tags": ["Projects"]
      },
      "delete": {
        "operationId": "ProjectsController_removeCategory",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "projectid",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "The category has been successfully deleted.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CategoryEntity" }
              }
            }
          },
          "404": { "description": "Category not found." }
        },
        "security": [{ "bearer": [] }],
        "summary": "Delete a category by ID",
        "tags": ["Projects"]
      }
    },
    "/projects/{projectid}/phases": {
      "post": {
        "operationId": "ProjectsController_createPhase",
        "parameters": [
          {
            "name": "projectid",
            "required": true,
            "in": "path",
            "description": "Project ID",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreatePhaseDto" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Phase created successfully.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PhaseEntity" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "Create a new Phase",
        "tags": ["Projects"]
      },
      "get": {
        "operationId": "ProjectsController_findAllPhases",
        "parameters": [
          {
            "name": "projectid",
            "required": true,
            "in": "path",
            "description": "Project ID",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of phases returned successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/PhaseEntity" }
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "Get all Phases for a Project",
        "tags": ["Projects"]
      }
    },
    "/projects/{projectid}/phases/{id}": {
      "get": {
        "operationId": "ProjectsController_findOnePhase",
        "parameters": [
          {
            "name": "projectid",
            "required": true,
            "in": "path",
            "description": "Project ID",
            "schema": { "type": "number" }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Phase ID",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "Phase returned successfully.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PhaseEntity" }
              }
            }
          },
          "404": { "description": "Phase not found." }
        },
        "security": [{ "bearer": [] }],
        "summary": "Get a single Phase by ID",
        "tags": ["Projects"]
      },
      "patch": {
        "operationId": "ProjectsController_updatePhase",
        "parameters": [
          {
            "name": "projectid",
            "required": true,
            "in": "path",
            "description": "Project ID",
            "schema": { "type": "number" }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Phase ID",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdatePhaseDto" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Phase updated successfully.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PhaseEntity" }
              }
            }
          },
          "404": { "description": "Phase not found." }
        },
        "security": [{ "bearer": [] }],
        "summary": "Update a Phase by ID",
        "tags": ["Projects"]
      },
      "delete": {
        "operationId": "ProjectsController_removePhase",
        "parameters": [
          {
            "name": "projectid",
            "required": true,
            "in": "path",
            "description": "Project ID",
            "schema": { "type": "number" }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Phase ID",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "Phase deleted successfully.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PhaseEntity" }
              }
            }
          },
          "404": { "description": "Phase not found." }
        },
        "security": [{ "bearer": [] }],
        "summary": "Delete a Phase by ID",
        "tags": ["Projects"]
      }
    },
    "/projects/{projectId}/assign-issue-type": {
      "post": {
        "operationId": "ProjectsController_assignIssueType",
        "parameters": [
          {
            "name": "projectId",
            "required": true,
            "in": "path",
            "schema": { "example": 1, "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AssignIssueTypeDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "security": [{ "bearer": [] }],
        "tags": ["Projects"]
      },
      "get": {
        "operationId": "ProjectsController_getAssigns",
        "parameters": [
          {
            "name": "projectId",
            "required": true,
            "in": "path",
            "schema": { "example": 1, "type": "number" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "security": [{ "bearer": [] }],
        "summary": "Get all assignments in a project",
        "tags": ["Projects"]
      }
    },
    "/projects/{projectId}/assign-issue-type/{assignId}": {
      "get": {
        "operationId": "ProjectsController_getAssignById",
        "parameters": [
          {
            "name": "projectId",
            "required": true,
            "in": "path",
            "schema": { "example": 1, "type": "number" }
          },
          {
            "name": "assignId",
            "required": true,
            "in": "path",
            "schema": { "example": 10, "type": "number" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "security": [{ "bearer": [] }],
        "summary": "Get a specific assignment in a project",
        "tags": ["Projects"]
      },
      "patch": {
        "operationId": "ProjectsController_updateAssign",
        "parameters": [
          {
            "name": "projectId",
            "required": true,
            "in": "path",
            "schema": { "example": 1, "type": "number" }
          },
          {
            "name": "assignId",
            "required": true,
            "in": "path",
            "schema": { "example": 10, "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateAssignDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "security": [{ "bearer": [] }],
        "summary": "Update issueType for an assignment",
        "tags": ["Projects"]
      },
      "delete": {
        "operationId": "ProjectsController_removeAssign",
        "parameters": [
          {
            "name": "projectId",
            "required": true,
            "in": "path",
            "schema": { "example": 1, "type": "number" }
          },
          {
            "name": "assignId",
            "required": true,
            "in": "path",
            "schema": { "example": 10, "type": "number" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "security": [{ "bearer": [] }],
        "summary": "Delete an assignment",
        "tags": ["Projects"]
      }
    },
    "/projects/{projectId}/domains": {
      "post": {
        "operationId": "ProjectsController_createProjectDomain",
        "parameters": [
          {
            "name": "projectId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjectDomainDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "ProjectDomain created successfully.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProjectDomainEntity" }
              }
            }
          },
          "401": { "description": "" }
        },
        "security": [{ "bearer": [] }, { "bearer": [] }],
        "summary": "Create a new ProjectDomain",
        "tags": ["Projects"]
      },
      "get": {
        "operationId": "ProjectsController_findAllProjectDomains",
        "parameters": [
          {
            "name": "projectId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of ProjectDomains.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectDomainEntity"
                  }
                }
              }
            }
          },
          "401": { "description": "" }
        },
        "security": [{ "bearer": [] }, { "bearer": [] }],
        "summary": "Get all ProjectDomains",
        "tags": ["Projects"]
      }
    },
    "/projects/{projectId}/domains/{id}": {
      "get": {
        "operationId": "ProjectsController_findOneProjectDomain",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "projectId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "ProjectDomain found.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProjectDomainEntity" }
              }
            }
          },
          "401": { "description": "" },
          "404": { "description": "ProjectDomain not found." }
        },
        "security": [{ "bearer": [] }, { "bearer": [] }],
        "summary": "Get a ProjectDomain by its ID",
        "tags": ["Projects"]
      },
      "patch": {
        "operationId": "ProjectsController_updateProjectDomain",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "projectId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProjectDomainDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ProjectDomain updated successfully.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProjectDomainEntity" }
              }
            }
          },
          "401": { "description": "" },
          "404": { "description": "ProjectDomain not found." }
        },
        "security": [{ "bearer": [] }, { "bearer": [] }],
        "summary": "Update a ProjectDomain",
        "tags": ["Projects"]
      },
      "delete": {
        "operationId": "ProjectsController_deleteProjectDomain",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "projectId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "ProjectDomain deleted successfully." },
          "401": { "description": "" },
          "404": { "description": "ProjectDomain not found." }
        },
        "security": [{ "bearer": [] }, { "bearer": [] }],
        "summary": "Delete a ProjectDomain",
        "tags": ["Projects"]
      }
    },
    "/projects/me/by-domain": {
      "get": {
        "operationId": "ProjectsController_getProjectByUrl",
        "parameters": [
          {
            "name": "domain",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProjectEntity" }
              }
            }
          },
          "401": { "description": "" }
        },
        "security": [{ "bearer": [] }, { "bearer": [] }],
        "summary": "Get Project by Url",
        "tags": ["Projects"]
      }
    },
    "/projects/{projectid}/tasks/me": {
      "get": {
        "operationId": "TasksController_listTasks",
        "parameters": [
          {
            "name": "projectid",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "role",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "keyword",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "categoryId",
            "required": false,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "statusId",
            "required": false,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "phaseId",
            "required": false,
            "in": "query",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskPaginationEntity"
                }
              }
            }
          }
        },
        "tags": ["Tasks"]
      },
      "post": {
        "operationId": "TasksController_createTask",
        "parameters": [
          {
            "name": "projectid",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateTaskDto" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TaskFullEntity" }
              }
            }
          }
        },
        "tags": ["Tasks"]
      }
    },
    "/projects/{projectid}/tasks/me/{id}": {
      "patch": {
        "operationId": "TasksController_updateTask",
        "parameters": [
          {
            "name": "projectid",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateTaskDto" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TaskFullEntity" }
              }
            }
          }
        },
        "tags": ["Tasks"]
      },
      "get": {
        "operationId": "TasksController_getMyTask",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TaskFullEntity" }
              }
            }
          }
        },
        "tags": ["Tasks"]
      }
    },
    "/projects/{projectid}/reports/me": {
      "get": {
        "operationId": "ReportsController_listReports",
        "parameters": [
          {
            "name": "projectid",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "role",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "severity",
            "required": false,
            "in": "query",
            "schema": {
              "enum": ["INFO", "LOW", "MEDIUM", "HIGH"],
              "type": "string"
            }
          },
          {
            "name": "issueType",
            "required": false,
            "in": "query",
            "schema": {
              "enum": [
                "UI",
                "FUNCTIONAL",
                "PERFORMANCE",
                "SECURITY",
                "NETWORK",
                "DATA",
                "OTHER"
              ],
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "schema": {
              "enum": [
                "INIT",
                "CONFIRMING",
                "IN_PROCESSING",
                "REJECTED",
                "DONE"
              ],
              "type": "string"
            }
          },
          {
            "name": "keyword",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "phaseId",
            "required": false,
            "in": "query",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportPaginationEntity"
                }
              }
            }
          }
        },
        "tags": ["Reports"]
      },
      "post": {
        "operationId": "ReportsController_createReport",
        "parameters": [
          {
            "name": "projectid",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateReportDto" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ReportFullEntity" }
              }
            }
          }
        },
        "tags": ["Reports"]
      }
    },
    "/projects/{projectid}/reports/me/{id}": {
      "patch": {
        "operationId": "ReportsController_updateReport",
        "parameters": [
          {
            "name": "projectid",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateReportDto" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ReportFullEntity" }
              }
            }
          }
        },
        "tags": ["Reports"]
      },
      "get": {
        "operationId": "ReportsController_getMyReport",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ReportFullEntity" }
              }
            }
          }
        },
        "tags": ["Reports"]
      }
    },
    "/projects/{projectid}/reports/me/{id}/merge": {
      "post": {
        "operationId": "ReportsController_mergeReport",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MergeReportDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Reports"]
      }
    },
    "/files/presigned-url": {
      "get": {
        "operationId": "FilesController_getPresignedUrl",
        "parameters": [
          {
            "name": "fileName",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PresignedUrlEntity" }
              }
            }
          }
        },
        "tags": ["Files"]
      }
    },
    "/projects/{projectid}/reports/{reportid}/report-comments/me": {
      "get": {
        "operationId": "ReportCommentsController_listComments",
        "parameters": [
          {
            "name": "reportid",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportCommentPaginateEntity"
                }
              }
            }
          }
        },
        "tags": ["Report Comments"]
      },
      "post": {
        "operationId": "ReportCommentsController_createComment",
        "parameters": [
          {
            "name": "reportid",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateCommentDto" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportCommentsEntity"
                }
              }
            }
          }
        },
        "tags": ["Report Comments"]
      }
    },
    "/projects/{projectid}/reports/{reportid}/report-comments/me/{id}": {
      "patch": {
        "operationId": "ReportCommentsController_updateComment",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "reportid",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateCommentDto" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportCommentsEntity"
                }
              }
            }
          }
        },
        "tags": ["Report Comments"]
      },
      "delete": {
        "operationId": "ReportCommentsController_deleteComment",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "reportid",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GeneralResult" }
              }
            }
          }
        },
        "tags": ["Report Comments"]
      }
    },
    "/projects/{projectid}/tasks/{taskid}/task-comments/me": {
      "get": {
        "operationId": "CommentsController_listComments",
        "parameters": [
          {
            "name": "taskid",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskCommentPaginateEntity"
                }
              }
            }
          }
        },
        "tags": ["Task Comments"]
      },
      "post": {
        "operationId": "CommentsController_createComment",
        "parameters": [
          {
            "name": "taskid",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "projectid",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TaskCreateCommentDto" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TaskCommentsEntity" }
              }
            }
          }
        },
        "tags": ["Task Comments"]
      }
    },
    "/projects/{projectid}/tasks/{taskid}/task-comments/me/{id}": {
      "patch": {
        "operationId": "CommentsController_updateComment",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "taskid",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TaskCreateCommentDto" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TaskCommentsEntity" }
              }
            }
          }
        },
        "tags": ["Task Comments"]
      },
      "delete": {
        "operationId": "CommentsController_deleteComment",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "taskid",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GeneralResult" }
              }
            }
          }
        },
        "tags": ["Task Comments"]
      }
    }
  },
  "info": {
    "title": "THESIS",
    "description": "The API",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": { "scheme": "bearer", "bearerFormat": "JWT", "type": "http" }
    },
    "schemas": {
      "LoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User email",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "description": "User password",
            "example": "password"
          }
        },
        "required": ["email", "password"]
      },
      "RoleEntity": {
        "type": "object",
        "properties": {
          "id": { "type": "number" },
          "category": {
            "type": "string",
            "enum": ["MEMBER", "GUEST", "OWNER"]
          },
          "name": { "type": "string" },
          "projectId": { "type": "number" }
        },
        "required": ["id", "category", "name", "projectId"]
      },
      "UserEntity": {
        "type": "object",
        "properties": {
          "id": { "type": "number" },
          "email": { "type": "string" },
          "fullname": { "type": "string" },
          "avatar": { "type": "string" },
          "address": { "type": "string" },
          "createdAt": { "format": "date-time", "type": "string" },
          "updatedAt": { "format": "date-time", "type": "string" },
          "role": { "$ref": "#/components/schemas/RoleEntity" },
          "phoneNumber": { "type": "string" },
          "username": { "type": "string" }
        },
        "required": [
          "id",
          "email",
          "fullname",
          "createdAt",
          "phoneNumber",
          "username"
        ]
      },
      "LoginReturnEntity": {
        "type": "object",
        "properties": {
          "accessToken": { "type": "string" },
          "refreshToken": { "type": "string" },
          "user": { "$ref": "#/components/schemas/UserEntity" }
        },
        "required": ["accessToken", "refreshToken", "user"]
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "username": { "type": "string" },
          "email": { "type": "string" },
          "phoneNumber": { "type": "string" },
          "address": { "type": "string" },
          "password": { "type": "string" },
          "fullname": { "type": "string" },
          "avatar": { "type": "string" }
        },
        "required": ["username", "email", "phoneNumber", "password", "fullname"]
      },
      "RefreshTokenDto": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Refresh Token",
            "example": "d50a44bc-5249-4406-83b1-afdea1887243"
          }
        },
        "required": ["token"]
      },
      "LoginEntity": {
        "type": "object",
        "properties": {
          "accessToken": { "type": "string" },
          "refreshToken": { "type": "string" },
          "user": { "$ref": "#/components/schemas/UserEntity" }
        },
        "required": ["accessToken", "refreshToken"]
      },
      "HttpExceptionEntity": { "type": "object", "properties": {} },
      "UserRoleEntity": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "category": { "type": "string", "enum": ["MEMBER", "GUEST", "OWNER"] }
        },
        "required": ["name", "category"]
      },
      "ProjectEntity": {
        "type": "object",
        "properties": {
          "id": { "type": "number" },
          "name": { "type": "string" },
          "projectThumbnail": { "type": "string" },
          "description": { "type": "string" },
          "createdAt": { "format": "date-time", "type": "string" },
          "updatedAt": { "format": "date-time", "type": "string" },
          "userRole": { "$ref": "#/components/schemas/UserRoleEntity" }
        },
        "required": [
          "id",
          "name",
          "projectThumbnail",
          "description",
          "createdAt",
          "updatedAt"
        ]
      },
      "ProjectPaginateEntity": {
        "type": "object",
        "properties": {
          "total": { "type": "number" },
          "items": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ProjectEntity" }
          }
        },
        "required": ["total", "items"]
      },
      "CreateProjectDomainDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "example": "GitHub" },
          "url": {
            "type": "string",
            "example": "https://github.com/example/project"
          }
        },
        "required": ["name", "url"]
      },
      "CreateProjectDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "description": { "type": "string" },
          "projectThumbnail": { "type": "string" },
          "projectDomain": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/CreateProjectDomainDto" }
          }
        },
        "required": ["name", "description"]
      },
      "UpdateProjectDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "description": { "type": "string" },
          "projectThumbnail": { "type": "string" },
          "projectDomain": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/CreateProjectDomainDto" }
          }
        }
      },
      "CreateRoleDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "category": { "type": "string" }
        },
        "required": ["name", "category"]
      },
      "GeneralResult": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean" },
          "message": { "type": "string" }
        },
        "required": ["success"]
      },
      "MemberPaginateEntity": {
        "type": "object",
        "properties": {
          "total": { "type": "number" },
          "items": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/UserEntity" }
          }
        },
        "required": ["total", "items"]
      },
      "CreateProjectStatusDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the status",
            "example": "In Progress"
          },
          "color": { "type": "string" }
        },
        "required": ["name"]
      },
      "StatusEntity": {
        "type": "object",
        "properties": {
          "id": { "type": "number" },
          "name": { "type": "string" },
          "color": { "type": "string" },
          "isCloseStatus": { "type": "boolean" }
        },
        "required": ["id", "name", "color"]
      },
      "UpdateStatusDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The new name of the status",
            "example": "Completed"
          },
          "color": { "type": "string" }
        }
      },
      "CreateCategoryDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the category",
            "example": "Backend"
          },
          "color": { "type": "string" }
        },
        "required": ["name"]
      },
      "CategoryEntity": {
        "type": "object",
        "properties": {
          "id": { "type": "number" },
          "name": { "type": "string" },
          "color": { "type": "string" }
        },
        "required": ["id", "name", "color"]
      },
      "UpdateCategoryDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The new name of the category",
            "example": "Frontend"
          },
          "color": { "type": "string" }
        }
      },
      "CreatePhaseDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the phase",
            "example": "Design Phase"
          },
          "description": {
            "type": "string",
            "description": "A brief description of the phase",
            "example": "Initial design and planning"
          },
          "from": {
            "type": "string",
            "description": "Start date/time of the phase",
            "example": "2024-01-01T00:00:00.000Z"
          },
          "to": {
            "type": "string",
            "description": "End date/time of the phase",
            "example": "2024-02-01T00:00:00.000Z"
          }
        },
        "required": ["name", "from", "to"]
      },
      "PhaseEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Unique identifier of the Phase",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Name of the Phase",
            "example": "Design Phase"
          },
          "description": {
            "type": "string",
            "description": "Description of the Phase",
            "example": "Initial design and planning",
            "nullable": true
          },
          "from": {
            "format": "date-time",
            "type": "string",
            "description": "Start datetime of the Phase",
            "example": "2024-01-01T00:00:00.000Z"
          },
          "to": {
            "format": "date-time",
            "type": "string",
            "description": "End datetime of the Phase",
            "example": "2024-02-01T00:00:00.000Z"
          },
          "projectId": {
            "type": "number",
            "description": "Associated Project ID",
            "example": 10
          }
        },
        "required": ["id", "name", "description", "from", "to", "projectId"]
      },
      "UpdatePhaseDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the phase",
            "example": "Updated Phase Name"
          },
          "description": {
            "type": "string",
            "description": "A brief description of the phase",
            "example": "Updated description"
          },
          "from": {
            "type": "string",
            "description": "Start date/time of the phase",
            "example": "2024-01-05T00:00:00.000Z"
          },
          "to": {
            "type": "string",
            "description": "End date/time of the phase",
            "example": "2024-02-10T00:00:00.000Z"
          }
        }
      },
      "AssignIssueTypeDto": {
        "type": "object",
        "properties": {
          "userId": { "type": "number", "example": 10 },
          "issueType": {
            "type": "string",
            "enum": [
              "UI",
              "FUNCTIONAL",
              "PERFORMANCE",
              "SECURITY",
              "NETWORK",
              "DATA",
              "OTHER"
            ],
            "example": "UI"
          }
        },
        "required": ["userId", "issueType"]
      },
      "UpdateAssignDto": {
        "type": "object",
        "properties": {
          "issueType": {
            "type": "string",
            "enum": [
              "UI",
              "FUNCTIONAL",
              "PERFORMANCE",
              "SECURITY",
              "NETWORK",
              "DATA",
              "OTHER"
            ],
            "example": "UI"
          },
          "userId": { "type": "number", "example": 10 }
        },
        "required": ["issueType", "userId"]
      },
      "ProjectDomainEntity": {
        "type": "object",
        "properties": {
          "id": { "type": "number" },
          "name": { "type": "string" },
          "url": { "type": "string" }
        },
        "required": ["id", "name", "url"]
      },
      "UpdateProjectDomainDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "example": "GitHub" },
          "url": {
            "type": "string",
            "example": "https://github.com/example/project"
          }
        }
      },
      "UserCompactEntity": {
        "type": "object",
        "properties": {
          "avatar": { "type": "string" },
          "username": { "type": "string" }
        },
        "required": ["username"]
      },
      "ProjectMemberEntity": {
        "type": "object",
        "properties": {
          "user": { "$ref": "#/components/schemas/UserCompactEntity" }
        },
        "required": ["user"]
      },
      "TaskListItemEntity": {
        "type": "object",
        "properties": {
          "id": { "type": "number" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "estimateTime": { "type": "number" },
          "deadline": { "format": "date-time", "type": "string" },
          "priority": {
            "type": "string",
            "enum": ["LOW", "MEDIUM", "HIGH", "IMMEDIATE"]
          },
          "isPublic": { "type": "boolean" },
          "statusId": { "type": "number" },
          "categoryId": { "type": "number" },
          "references": { "type": "array", "items": { "type": "string" } },
          "assignedTo": { "type": "number" },
          "Assignee": { "$ref": "#/components/schemas/ProjectMemberEntity" },
          "ProjectMember": {
            "$ref": "#/components/schemas/ProjectMemberEntity"
          },
          "tags": { "type": "array", "items": { "type": "number" } },
          "Report": { "type": "object" },
          "reportId": { "type": "number" },
          "phaseId": { "type": "number" }
        },
        "required": [
          "id",
          "name",
          "description",
          "ProjectMember",
          "Report",
          "reportId"
        ]
      },
      "TaskPaginationEntity": {
        "type": "object",
        "properties": {
          "total": { "type": "number" },
          "items": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/TaskListItemEntity" }
          }
        },
        "required": ["total", "items"]
      },
      "CreateTaskDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "description": { "type": "string" },
          "estimateTime": { "type": "number" },
          "deadline": { "format": "date-time", "type": "string" },
          "priority": {
            "type": "string",
            "enum": ["LOW", "MEDIUM", "HIGH", "IMMEDIATE"]
          },
          "isPublic": { "type": "boolean" },
          "statusId": { "type": "number" },
          "categoryId": { "type": "number" },
          "references": { "type": "array", "items": { "type": "string" } },
          "assignedTo": { "type": "number" },
          "tags": { "type": "array", "items": { "type": "number" } },
          "attachments": { "type": "array", "items": { "type": "number" } },
          "reportId": { "type": "number" },
          "phaseId": { "type": "number" }
        },
        "required": ["name", "description"]
      },
      "FileEntity": {
        "type": "object",
        "properties": {
          "id": { "type": "number" },
          "name": { "type": "string" },
          "path": { "type": "string" }
        },
        "required": ["id", "name", "path"]
      },
      "TaskAttachmentEntity": {
        "type": "object",
        "properties": { "file": { "$ref": "#/components/schemas/FileEntity" } },
        "required": ["file"]
      },
      "TaskCommentsEntity": {
        "type": "object",
        "properties": {
          "projectMember": {
            "$ref": "#/components/schemas/ProjectMemberEntity"
          },
          "id": { "type": "number" },
          "createdBy": { "type": "number" },
          "createdAt": { "format": "date-time", "type": "string" },
          "updatedAt": { "format": "date-time", "type": "string" },
          "content": { "type": "string" },
          "taskId": { "type": "number" }
        },
        "required": [
          "projectMember",
          "id",
          "createdBy",
          "createdAt",
          "updatedAt",
          "content",
          "taskId"
        ]
      },
      "TaskFullEntity": {
        "type": "object",
        "properties": {
          "id": { "type": "number" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "estimateTime": { "type": "number" },
          "deadline": { "format": "date-time", "type": "string" },
          "priority": {
            "type": "string",
            "enum": ["LOW", "MEDIUM", "HIGH", "IMMEDIATE"]
          },
          "isPublic": { "type": "boolean" },
          "statusId": { "type": "number" },
          "categoryId": { "type": "number" },
          "references": { "type": "array", "items": { "type": "string" } },
          "assignedTo": { "type": "number" },
          "Assignee": { "$ref": "#/components/schemas/ProjectMemberEntity" },
          "ProjectMember": {
            "$ref": "#/components/schemas/ProjectMemberEntity"
          },
          "tags": { "type": "array", "items": { "type": "number" } },
          "Report": { "type": "object" },
          "reportId": { "type": "number" },
          "phaseId": { "type": "number" },
          "TaskAttachment": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/TaskAttachmentEntity" }
          },
          "TaskComment": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/TaskCommentsEntity" }
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "ProjectMember",
          "Report",
          "reportId",
          "TaskAttachment",
          "TaskComment"
        ]
      },
      "UpdateTaskDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "estimateTime": { "type": "number" },
          "deadline": { "format": "date-time", "type": "string" },
          "priority": {
            "type": "string",
            "enum": ["LOW", "MEDIUM", "HIGH", "IMMEDIATE"]
          },
          "isPublic": { "type": "boolean" },
          "statusId": { "type": "number" },
          "categoryId": { "type": "number" },
          "references": { "type": "array", "items": { "type": "string" } },
          "assignedTo": { "type": "number" },
          "tags": { "type": "array", "items": { "type": "number" } },
          "newAttachments": { "type": "array", "items": { "type": "array" } },
          "deleteAttachments": {
            "type": "array",
            "items": { "type": "array" }
          },
          "attachments": { "type": "array", "items": { "type": "number" } },
          "reportId": { "type": "number" },
          "phaseId": { "type": "number" }
        }
      },
      "ReportListItemEntity": {
        "type": "object",
        "properties": {
          "id": { "type": "number" },
          "name": { "type": "string" },
          "type": { "type": "string", "enum": ["BUG", "FEEDBACK", "WISH"] },
          "description": { "type": "string" },
          "stepsToReproduce": { "type": "string" },
          "expectedBehavior": { "type": "string" },
          "actualResult": { "type": "string" },
          "issueType": {
            "type": "string",
            "enum": [
              "UI",
              "FUNCTIONAL",
              "PERFORMANCE",
              "SECURITY",
              "NETWORK",
              "DATA",
              "OTHER"
            ]
          },
          "severity": {
            "type": "string",
            "enum": ["INFO", "LOW", "MEDIUM", "HIGH"]
          },
          "assignedTo": { "type": "number" },
          "createdById": { "type": "number" },
          "projectId": { "type": "number" },
          "status": {
            "type": "string",
            "enum": ["INIT", "CONFIRMING", "IN_PROCESSING", "REJECTED", "DONE"]
          },
          "url": { "type": "string" },
          "createdAt": { "format": "date-time", "type": "string" },
          "updatedAt": { "format": "date-time", "type": "string" },
          "assignee": { "$ref": "#/components/schemas/UserCompactEntity" },
          "createdBy": { "$ref": "#/components/schemas/UserCompactEntity" },
          "phaseId": { "type": "number" },
          "isProcessing": { "type": "boolean" }
        },
        "required": [
          "id",
          "name",
          "type",
          "description",
          "createdById",
          "projectId",
          "status",
          "url",
          "createdAt",
          "updatedAt",
          "createdBy"
        ]
      },
      "ReportPaginationEntity": {
        "type": "object",
        "properties": {
          "total": { "type": "number" },
          "items": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ReportListItemEntity" }
          }
        },
        "required": ["total", "items"]
      },
      "CreateReportImageDto": {
        "type": "object",
        "properties": {
          "id": { "type": "number" },
          "name": { "type": "string" },
          "path": { "type": "string" }
        },
        "required": ["name", "path"]
      },
      "CreateReportDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "type": { "type": "string" },
          "severity": { "type": "string" },
          "isPublic": { "type": "boolean" },
          "assignedTo": { "type": "number" },
          "description": { "type": "string" },
          "stepsToReproduce": { "type": "string" },
          "expectedBehavior": { "type": "string" },
          "actualResult": { "type": "string" },
          "issueType": { "type": "string" },
          "additionInfo": { "type": "object" },
          "url": { "type": "string" },
          "status": { "type": "string" },
          "images": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/CreateReportImageDto" }
          },
          "tags": { "type": "array", "items": { "type": "string" } },
          "phaseId": { "type": "number" }
        },
        "required": [
          "name",
          "severity",
          "description",
          "stepsToReproduce",
          "expectedBehavior",
          "actualResult",
          "issueType",
          "url"
        ]
      },
      "ReportImageEntity": {
        "type": "object",
        "properties": {
          "id": { "type": "number" },
          "name": { "type": "string" },
          "path": { "type": "string" },
          "reportId": { "type": "number" }
        },
        "required": ["id", "name", "path", "reportId"]
      },
      "CreateByEntity": {
        "type": "object",
        "properties": {
          "username": { "type": "string" },
          "avatar": { "type": "string" }
        },
        "required": ["username"]
      },
      "ReportCommentsEntity": {
        "type": "object",
        "properties": {
          "createdBy": { "$ref": "#/components/schemas/CreateByEntity" },
          "id": { "type": "number" },
          "createdById": { "type": "number" },
          "createdAt": { "format": "date-time", "type": "string" },
          "updatedAt": { "format": "date-time", "type": "string" },
          "content": { "type": "string" },
          "reportId": { "type": "number" }
        },
        "required": [
          "createdBy",
          "id",
          "createdById",
          "createdAt",
          "updatedAt",
          "content",
          "reportId"
        ]
      },
      "ReportDuplicateEntity": {
        "type": "object",
        "properties": {
          "id": { "type": "number" },
          "name": { "type": "string" },
          "level": { "type": "string", "enum": ["LOW", "MEDIUM", "HIGH"] }
        },
        "required": ["id", "name", "level"]
      },
      "ReportCompactEntity": {
        "type": "object",
        "properties": {
          "id": { "type": "number" },
          "name": { "type": "string" }
        },
        "required": ["id", "name"]
      },
      "TaskCompactEntity": {
        "type": "object",
        "properties": {
          "id": { "type": "number" },
          "name": { "type": "string" },
          "status": { "type": "string" }
        },
        "required": ["id", "name"]
      },
      "ReportFullEntity": {
        "type": "object",
        "properties": {
          "id": { "type": "number" },
          "name": { "type": "string" },
          "type": { "type": "string", "enum": ["BUG", "FEEDBACK", "WISH"] },
          "description": { "type": "string" },
          "stepsToReproduce": { "type": "string" },
          "expectedBehavior": { "type": "string" },
          "actualResult": { "type": "string" },
          "issueType": {
            "type": "string",
            "enum": [
              "UI",
              "FUNCTIONAL",
              "PERFORMANCE",
              "SECURITY",
              "NETWORK",
              "DATA",
              "OTHER"
            ]
          },
          "severity": {
            "type": "string",
            "enum": ["INFO", "LOW", "MEDIUM", "HIGH"]
          },
          "assignedTo": { "type": "number" },
          "createdById": { "type": "number" },
          "projectId": { "type": "number" },
          "status": {
            "type": "string",
            "enum": ["INIT", "CONFIRMING", "IN_PROCESSING", "REJECTED", "DONE"]
          },
          "url": { "type": "string" },
          "createdAt": { "format": "date-time", "type": "string" },
          "updatedAt": { "format": "date-time", "type": "string" },
          "assignee": { "$ref": "#/components/schemas/UserCompactEntity" },
          "createdBy": { "$ref": "#/components/schemas/UserCompactEntity" },
          "phaseId": { "type": "number" },
          "isProcessing": { "type": "boolean" },
          "ReportImage": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ReportImageEntity" }
          },
          "ReportComment": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ReportCommentsEntity" }
          },
          "DuplicateGroup": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ReportDuplicateEntity" }
          },
          "children": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ReportCompactEntity" }
          },
          "Task": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/TaskCompactEntity" }
          }
        },
        "required": [
          "id",
          "name",
          "type",
          "description",
          "createdById",
          "projectId",
          "status",
          "url",
          "createdAt",
          "updatedAt",
          "createdBy",
          "ReportImage",
          "ReportComment"
        ]
      },
      "UpdateReportDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "type": { "type": "string" },
          "severity": { "type": "string" },
          "isPublic": { "type": "boolean" },
          "assignedTo": { "type": "number" },
          "description": { "type": "string" },
          "stepsToReproduce": { "type": "string" },
          "expectedBehavior": { "type": "string" },
          "actualResult": { "type": "string" },
          "issueType": { "type": "string" },
          "additionInfo": { "type": "object" },
          "url": { "type": "string" },
          "status": { "type": "string" },
          "images": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/CreateReportImageDto" }
          },
          "tags": { "type": "array", "items": { "type": "string" } },
          "phaseId": { "type": "number" },
          "newImages": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/CreateReportImageDto" }
          },
          "deleteImages": { "type": "array", "items": { "type": "number" } }
        }
      },
      "MergeReportDto": {
        "type": "object",
        "properties": {
          "childrenId": { "type": "number" },
          "type": { "type": "string" }
        },
        "required": ["childrenId"]
      },
      "PresignedUrlEntity": {
        "type": "object",
        "properties": { "url": { "type": "string" } },
        "required": ["url"]
      },
      "ReportCommentPaginateEntity": {
        "type": "object",
        "properties": {
          "total": { "type": "number" },
          "items": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ReportCommentsEntity" }
          }
        },
        "required": ["total", "items"]
      },
      "CreateCommentDto": {
        "type": "object",
        "properties": { "content": { "type": "string" } },
        "required": ["content"]
      },
      "TaskCommentPaginateEntity": {
        "type": "object",
        "properties": {
          "total": { "type": "number" },
          "items": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/TaskCommentsEntity" }
          }
        },
        "required": ["total", "items"]
      },
      "TaskCreateCommentDto": {
        "type": "object",
        "properties": { "content": { "type": "string" } },
        "required": ["content"]
      }
    }
  },
  "security": [{ "bearer": [] }]
}
